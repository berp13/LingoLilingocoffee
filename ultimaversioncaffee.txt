<!doctype html>
<html lang="es">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coffee Talk English</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Comic+Neue:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Comic Neue', cursive;
            background-color: #F8F4E3;
            color: #3C2F2F;
        }
        .container {
            max-width: 800px;
            margin: auto;
            background-color: #FFFFFF;
            padding: 2.5rem;
            border-radius: 1rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        .section-title {
            color: #6C4A4A;
        }
        .btn-primary {
            background-color: #D2B48C;
            transition: background-color 0.3s;
        }
        .btn-primary:hover {
            background-color: #A68C6A;
        }
        .phrase-card, .quiz-box, .reward-box {
            border: 1px solid #E0E0E0;
            border-radius: 0.5rem;
        }
        .option {
            transition: background-color 0.2s, transform 0.2s;
        }
        .option:hover {
            background-color: #E0E0E0;
            transform: translateY(-2px);
        }
        .option.correct {
            background-color: #A9D1A9;
            color: white;
        }
        .option.wrong {
            background-color: #E8A8A8;
            color: white;
        }
        .audio-icon {
            cursor: pointer;
        }
        @keyframes bounce {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-5px); }
        }
        .reward-box img {
            animation: bounce 1s infinite;
        }
        /* Modal Styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 100;
        }
        .modal-content {
            background-color: #FFFFFF;
            padding: 2rem;
            border-radius: 1rem;
            text-align: center;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            max-width: 90%;
            animation: fadeIn 0.3s ease-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="p-4">

    <!-- Audio de fondo -->
    <audio id="background-audio" loop muted>
        <source src="coffee_song.mp3" type="audio/mpeg">
    </audio>

    <div class="container mx-auto p-6 md:p-10 rounded-xl shadow-lg mt-8 bg-white">
        <header class="text-center mb-8">
            <h1 class="text-4xl md:text-5xl font-extrabold section-title mb-2">¡Hola, Barista Bilingüe! ☕</h1>
            <p class="text-lg md:text-xl text-gray-600">Aprende inglés para tu cafetería, ¡gana recompensas y diviértete!</p>
        </header>

        <!-- Sección de progreso de nivel -->
        <section class="mb-8">
            <div class="flex justify-between items-center mb-2">
                <span id="level-title" class="text-lg font-bold text-gray-700"></span>
                <span id="quiz-progress" class="text-sm text-gray-500"></span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-4">
                <div id="progress-bar" class="bg-yellow-500 h-4 rounded-full transition-all duration-500 ease-in-out" style="width: 0%;"></div>
            </div>
        </section>

        <!-- Sección de contenido principal: Palabras, Quiz y Recompensas -->
        <section id="content-container" class="space-y-8">
            <!-- El contenido dinámico se carga aquí -->
        </section>
    </div>

    <!-- Modal de "Cerca de la recompensa" -->
    <div id="reward-modal" class="modal-overlay hidden">
        <div class="modal-content">
            <h3 class="text-2xl font-bold section-title mb-4">¡Atención!</h3>
            <p class="text-lg text-gray-700 mb-6">¡Estás muy cerca de una gran recompensa, sigue avanzando!</p>
            <button onclick="hideModal()" class="btn-primary py-2 px-6 text-white rounded-full font-bold">¡Entendido!</button>
        </div>
    </div>

    <script>
        const contentContainer = document.getElementById('content-container');
        const levelTitleEl = document.getElementById('level-title');
        const quizProgressEl = document.getElementById('quiz-progress');
        const progressBarEl = document.getElementById('progress-bar');
        const rewardModal = document.getElementById('reward-modal');
        
        let currentLevel = 0;
        let correctAnswers = 0;
        let answeredQuestions = 0; 
        const quizLength = 12;
        const totalLevels = 100;

        // Base de datos de palabras y preguntas - Nivel 1 a 25 (Básico)
        const VOCABULARY_BASIC = [
            { es: "Hola", en: "Hello" }, { es: "Gracias", en: "Thank you" }, { es: "Por favor", en: "Please" },
            { es: "Café", en: "Coffee" }, { es: "Té", en: "Tea" }, { es: "Agua", en: "Water" },
            { es: "Azúcar", en: "Sugar" }, { es: "Leche", en: "Milk" }, { es: "Hielo", en: "Ice" },
            { es: "Sándwich", en: "Sandwich" }, { es: "Panecillo", en: "Muffin" }, { es: "Galleta", en: "Cookie" },
            { es: "Para aquí", en: "For here" }, { es: "Para llevar", en: "To go" }, { es: "Taza", en: "Cup" },
            { es: "Vaso", en: "Glass" }, { es: "Caliente", en: "Hot" }, { es: "Frío", en: "Cold" },
            { es: "Mesa", en: "Table" }, { es: "Silla", en: "Chair" }
        ];

        const QUESTIONS_BASIC = [
            { q: '¿Cómo se dice "Gracias" en inglés?', options: ['Sorry', 'Please', 'Thank you'], a: 2 },
            { q: 'Si un cliente dice "Hello!", ¿qué le respondes?', options: ['Goodbye!', 'Welcome!', 'Thank you!'], a: 1 },
            { q: 'Para pedir un "muffin", se dice:', options: ['A pastry', 'A muffin', 'A cake'], a: 1 },
            { q: '¿Cómo se dice "Para llevar" en inglés?', options: ['To go', 'For home', 'For now'], a: 0 },
            { q: 'Si te piden "a small coffee", ¿qué significa?', options: ['Un café pequeño', 'Un café dulce', 'Un café grande'], a: 0 },
            { q: 'Un cliente pide "A cookie". ¿Qué quiere?', options: ['Un pan', 'Una galleta', 'Un pastel'], a: 1 },
            { q: '¿Cómo se dice "Con azúcar" en inglés?', options: ['With sugar', 'Without sugar', 'Sugar with'], a: 0 },
            { q: 'Si te piden "an iced coffee", ¿qué significa?', options: ['Un café con hielo', 'Un café caliente', 'Un café sin leche'], a: 0 },
            { q: 'Un cliente te pide un "spoon". ¿Qué le das?', options: ['Un tenedor', 'Un cuchillo', 'Una cuchara'], a: 2 },
            { q: 'Si el letrero de la cafetería dice "Closed", ¿qué significa?', options: ['Abierto', 'Cerrado', 'Ocupado'], a: 1 },
            { q: '¿Cómo se dice "agua" en inglés?', options: ['Juice', 'Water', 'Tea'], a: 1 },
            { q: '¿Qué significa "Hot"?', options: ['Caliente', 'Frío', 'Hielo'], a: 0 },
            { q: 'Un cliente dice "I need a glass". ¿Qué pide?', options: ['Una taza', 'Una cuchara', 'Un vaso'], a: 2 },
            { q: 'Si un cliente dice "I would like a tea, please". ¿Qué quiere?', options: ['Un té', 'Un café', 'Un sándwich'], a: 0 },
        ];

        // Base de datos de palabras y preguntas - Nivel 26 a 50 (Intermedio)
        const VOCABULARY_INTERMEDIATE = [
            { es: "¿Qué desea?", en: "What would you like?" }, { es: "Siguiente, por favor", en: "Next, please" },
            { es: "El total es...", en: "The total is..." }, { es: "¿Algo más?", en: "Anything else?" },
            { es: "Pagar con tarjeta", en: "Pay with card" }, { es: "Pagar en efectivo", en: "Pay with cash" },
            { es: "Tamaño pequeño", en: "Small size" }, { es: "Tamaño mediano", en: "Medium size" },
            { es: "Tamaño grande", en: "Large size" }, { es: "Bebida", en: "Drink" },
            { es: "Comida", en: "Food" }, { es: "Postre", en: "Dessert" },
            { es: "Vainilla", en: "Vanilla" }, { es: "Chocolate", en: "Chocolate" }, { es: "Caramelo", en: "Caramel" },
            { es: "Canela", en: "Cinnamon" }, { es: "Sirope", en: "Syrup" }, { es: "Panadería", en: "Bakery" }
        ];

        const QUESTIONS_INTERMEDIATE = [
            { q: 'Para preguntar "Si quiere algo más?", se dice:', options: ['Do you want more?', 'Anything else?', 'More?'], a: 1 },
            { q: '¿Cómo se dice "Pagar en efectivo"?', options: ['Pay with cash', 'Pay with card', 'Pay now'], a: 0 },
            { q: 'Si un cliente dice "I would like a large coffee". ¿Qué significa?', options: ['Un café pequeño', 'Un café mediano', 'Un café grande'], a: 2 },
            { q: 'El cliente dice "I need a drink". ¿Qué quiere?', options: ['Una bebida', 'Una comida', 'Un postre'], a: 0 },
            { q: 'Para decir que el total es 5 dólares, se dice:', options: ['The total are five dollars', 'Total is five', 'The total is five dollars'], a: 2 },
            { q: '¿Cómo se dice "next, please"?', options: ['Siguiente, por favor', 'Espere, por favor', 'Pase, por favor'], a: 0 },
            { q: 'Si un cliente pide "Vanilla syrup", ¿qué le pones?', options: ['Sirope de caramelo', 'Sirope de vainilla', 'Sirope de canela'], a: 1 },
            { q: '¿Qué significa la palabra "Bakery"?', options: ['Cafetería', 'Panadería', 'Heladería'], a: 1 },
            { q: 'Un cliente te dice "May I pay with card?". ¿Qué significa?', options: ['¿Puedo pagar en efectivo?', '¿Puedo pagar con tarjeta?', '¿Puede darme la cuenta?'], a: 1 },
            { q: '¿Cómo se dice "postre" en inglés?', options: ['Food', 'Dessert', 'Drink'], a: 1 },
            { q: 'Si te piden "cinnamon" en su café, ¿qué es?', options: ['Vainilla', 'Canela', 'Chocolate'], a: 1 },
            { q: '¿Qué significa "food"?', options: ['Comida', 'Bebida', 'Postre'], a: 0 }
        ];

        // Base de datos de palabras y preguntas - Nivel 51 a 100 (Avanzado)
        const VOCABULARY_ADVANCED = [
            { es: "¿Puedo ayudarle?", en: "May I help you?" }, { es: "Su cambio es...", en: "Your change is..." },
            { es: "Disculpe", en: "Excuse me" }, { es: "Con hielo", en: "On the rocks" },
            { es: "En un vaso", en: "In a glass" }, { es: "Con crema batida", en: "With whipped cream" },
            { es: "Endulzarlo", en: "Sweeten it" }, { es: "Moca", en: "Mocha" },
            { es: "Capuchino", en: "Cappuccino" }, { es: "Expreso", en: "Espresso" },
            { es: "Frapuchino", en: "Frappuccino" }, { es: "Recibo", en: "Receipt" },
            { es: "Cajera", en: "Cashier" }, { es: "Cajero automático", en: "ATM" },
            { es: "Un minuto, por favor", en: "Just a minute, please" }, { es: "Por supuesto", en: "Of course" }
        ];

        const QUESTIONS_ADVANCED = [
            { q: '¿Cómo se dice "Un minuto, por favor"?', options: ['One minute', 'Just a minute, please', 'Wait, please'], a: 1 },
            { q: 'Si un cliente pide "whipped cream", ¿qué quiere?', options: ['Crema batida', 'Leche', 'Azúcar'], a: 0 },
            { q: '¿Qué significa "Your change is..."?', options: ['Su pedido es...', 'Su cambio es...', 'Su cuenta es...'], a: 1 },
            { q: 'Si te piden un "Mocha", es:', options: ['Un café con chocolate', 'Un café con leche', 'Un café solo'], a: 0 },
            { q: '¿Qué significa "receipt"?', options: ['Recibo', 'Pedido', 'Menú'], a: 0 },
            { q: 'Un cliente te pide un "Espresso". ¿Qué es?', options: ['Un café largo', 'Un café con leche', 'Un café solo y fuerte'], a: 2 },
            { q: '¿Cómo se dice "cajero automático"?', options: ['Cashier', 'Register', 'ATM'], a: 2 },
            { q: 'Si el cliente dice "May I help you?", te está preguntando:', options: ['¿Te ayudo?', '¿Necesitas ayuda?', '¿En qué puedo ayudarle?'], a: 2 },
            { q: 'Un cliente pide su bebida "on the rocks". ¿Qué significa?', options: ['Con hielo', 'Con leche', 'Con sirope'], a: 0 },
            { q: '¿Qué significa la frase "In a glass"?', options: ['En una taza', 'En un vaso', 'En un plato'], a: 1 },
            { q: 'Para endulzar tu bebida, se dice:', options: ['Sweeten it', 'Add sugar', 'Make it sweet'], a: 0 },
            { q: '¿Qué es un "Frappuccino"?', options: ['Un café caliente', 'Un café batido frío', 'Un café con leche'], a: 1 }
        ];

        const REWARDS = ["un café gratis", "una gorra de la cafetería", "media hora de descanso", "el café de la casa", "un postre de cortesía"];
        
        // --- Generar todos los niveles y quizzes ---
        const QUIZZES = [];
        const allWords = [...VOCABULARY_BASIC, ...VOCABULARY_INTERMEDIATE, ...VOCABULARY_ADVANCED];
        const allQuestions = [...QUESTIONS_BASIC, ...QUESTIONS_INTERMEDIATE, ...QUESTIONS_ADVANCED];
        
        for (let i = 0; i < totalLevels; i++) {
            // Aumentar la dificultad de forma gradual
            let wordPool;
            let questionPool;
            if (i < 25) { // Niveles 1-25: Básico
                wordPool = VOCABULARY_BASIC;
                questionPool = QUESTIONS_BASIC;
            } else if (i < 50) { // Niveles 26-50: Intermedio
                wordPool = [...VOCABULARY_BASIC, ...VOCABULARY_INTERMEDIATE];
                questionPool = [...QUESTIONS_BASIC, ...QUESTIONS_INTERMEDIATE];
            } else { // Niveles 51-100: Avanzado
                wordPool = [...allWords];
                questionPool = [...allQuestions];
            }

            const shuffledWords = [...wordPool].sort(() => 0.5 - Math.random()).slice(0, 10);
            const shuffledQuestions = [...questionPool].sort(() => 0.5 - Math.random()).slice(0, quizLength);
            
            QUIZZES.push({
                name: `Nivel ${i + 1}`,
                words: shuffledWords,
                questions: shuffledQuestions
            });
        }

        // Funciones de audio
        const synth = window.speechSynthesis;
        function speak(text) {
            if (synth.speaking) {
                console.error('speechSynthesis.speaking');
                return;
            }
            const utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = 'en-US';
            utterance.rate = 0.5; // Velocidad de pronunciación más lenta
            synth.speak(utterance);
        }
        
        // Función para generar una frase de ejemplo con el vocabulario aprendido
        function createExampleSentence(word) {
            const templates = [
                `I would like a ${word}, please.`,
                `Can I have a ${word}?`,
                `I need some ${word}, thank you.`,
                `Could I get a ${word}?`
            ];
            // Elegir una plantilla aleatoria
            const randomIndex = Math.floor(Math.random() * templates.length);
            return templates[randomIndex];
        }

        // Función para mostrar el modal
        function showModal() {
            rewardModal.classList.remove('hidden');
        }

        // Función para ocultar el modal
        window.hideModal = () => {
            rewardModal.classList.add('hidden');
            renderQuizContent();
        }

        // --- Manejo del flujo de juego ---
        function renderContent() {
            if (currentLevel >= totalLevels) {
                showFinalMessage();
                return;
            }
            const currentQuizData = QUIZZES[currentLevel];
            
            levelTitleEl.textContent = currentQuizData.name;
            quizProgressEl.textContent = `Nivel ${currentLevel + 1} de ${totalLevels}`;
            const progressPercentage = ((currentLevel + 1) / totalLevels) * 100;
            progressBarEl.style.width = `${progressPercentage}%`;

            renderWords(currentQuizData.words);
        }

        function renderWords(words) {
            const wordCards = words.map(p => `
                <div class="bg-gray-100 p-4 rounded-lg flex flex-col items-center">
                    <span class="text-xs text-gray-500">${p.es}</span>
                    <span class="text-xl font-bold mt-1">${p.en}</span>
                    <div class="mt-2 text-xl audio-icon" onclick="speak('${p.en}')">🔊</div>
                </div>
            `).join('');
            
            contentContainer.innerHTML = `
                <h2 class="text-2xl font-bold section-title text-center mb-4">Lección de Vocabulario</h2>
                <div class="grid grid-cols-2 md:grid-cols-5 gap-4">
                    ${wordCards}
                </div>
                <div class="text-center mt-6">
                    <button onclick="showQuiz()" class="btn-primary py-3 px-8 text-white rounded-full font-bold">¡Estoy lista para el quiz!</button>
                </div>
            `;
        }
        
        window.showQuiz = () => {
            // Muestra el modal antes de un nivel de recompensa
            if ((currentLevel + 1) % 20 === 19) {
                showModal();
            } else {
                renderQuizContent();
            }
        }

        function renderQuizContent() {
            correctAnswers = 0;
            answeredQuestions = 0; 
            const quizData = QUIZZES[currentLevel];
            const optionsHtml = quizData.questions.map((q, qIndex) => `
                <div class="mb-6">
                    <p class="text-lg font-semibold mb-2">${qIndex + 1}. ${q.q}</p>
                    <div id="q-${qIndex}" class="grid grid-cols-1 md:grid-cols-3 gap-2">
                        ${q.options.map((o, oIndex) => `
                            <div class="option p-3 rounded-lg text-center cursor-pointer bg-gray-100" data-q-index="${qIndex}" data-o-index="${oIndex}">
                                ${o}
                            </div>
                        `).join('')}
                    </div>
                </div>
            `).join('');

            contentContainer.innerHTML = `
                <h2 class="text-2xl font-bold section-title text-center mb-4">¡Es Hora del Quiz!</h2>
                ${optionsHtml}
                <div id="quiz-feedback" class="text-center text-lg mt-4 font-bold"></div>
                <div class="text-center mt-6" id="quiz-buttons-container"></div>
            `;
            
            // Asignar los eventos de clic a las opciones
            document.querySelectorAll('.option').forEach(option => {
                option.addEventListener('click', () => {
                    checkAnswer(option);
                });
            });
        }

        function checkAnswer(element) {
            const questionIndex = parseInt(element.dataset.qIndex);
            const selectedOptionIndex = parseInt(element.dataset.oIndex);
            const quizData = QUIZZES[currentLevel];
            const correctOptionIndex = quizData.questions[questionIndex].a;
            
            const optionsContainer = document.getElementById(`q-${questionIndex}`);
            const options = optionsContainer.querySelectorAll('.option');
            options.forEach(opt => opt.style.pointerEvents = 'none'); // Deshabilitar clics

            if (selectedOptionIndex === correctOptionIndex) {
                element.classList.add('correct');
                correctAnswers++;
            } else {
                element.classList.add('wrong');
                options[correctOptionIndex].classList.add('correct');
            }
            
            answeredQuestions++;

            if (answeredQuestions === quizLength) {
                setTimeout(() => {
                    const feedbackEl = document.getElementById('quiz-feedback');
                    const buttonsContainer = document.getElementById('quiz-buttons-container');
                    
                    if (correctAnswers === quizLength) {
                        feedbackEl.innerHTML = `<span class="text-green-600">¡Felicidades! ¡Has respondido todas las preguntas correctamente!</span>`;
                        buttonsContainer.innerHTML = `<button onclick="moveToNextLevel()" class="btn-primary py-3 px-8 text-white rounded-full font-bold">Siguiente Nivel</button>`;
                    } else {
                        feedbackEl.innerHTML = `<span class="text-red-600">Vuelve a intentarlo. Responde todas las preguntas correctamente para avanzar al siguiente nivel.</span>`;
                        buttonsContainer.innerHTML = `<button onclick="renderQuizContent()" class="btn-primary py-3 px-8 text-white rounded-full font-bold">Volver a Intentar</button>`;
                    }
                }, 1000);
            }
        }

        window.moveToNextLevel = () => {
            if ((currentLevel + 1) % 20 === 0) {
                showReward();
            } else {
                startNextQuiz();
            }
        };

        function showReward() {
            const rewardIndex = ((currentLevel + 1) / 20) - 1;
            const reward = REWARDS[rewardIndex % REWARDS.length]; // Para que las recompensas se repitan
            contentContainer.innerHTML = `
                <div class="reward-box text-center p-6 bg-white rounded-lg shadow-inner">
                    <h2 class="text-3xl font-bold section-title mb-4">¡Nivel Completado! 🎉</h2>
                    <p class="text-xl">¡Felicidades, Barista Bilingüe! Te has ganado</p>
                    <div class="flex flex-col items-center justify-center my-6">
                        <img src="https://placehold.co/100x100/A68C6A/FFFFFF?text=✨" alt="Reward Icon" class="w-24 h-24">
                        <span class="mt-4 text-2xl font-extrabold text-yellow-600 uppercase">${reward}</span>
                    </div>
                    <p class="text-sm italic text-gray-500">¡Habla con tu hijo/a para reclamar tu recompensa!</p>
                    <button onclick="startNextQuiz()" class="btn-primary py-3 px-8 text-white rounded-full font-bold mt-6">Continuar</button>
                </div>
            `;
        }

        window.startNextQuiz = () => {
            currentLevel++;
            renderContent();
        };

        function showFinalMessage() {
            contentContainer.innerHTML = `
                <div class="reward-box text-center p-6 bg-white rounded-lg shadow-inner">
                    <h2 class="text-3xl font-bold section-title mb-4">¡Aventura Terminada! 🎉</h2>
                    <p class="text-xl">¡Felicidades, Barista Bilingüe! ¡Has ganado el premio de salir 30 minutos temprano del trabajo!</p>
                    <div class="flex flex-col items-center justify-center my-6">
                        <img src="https://placehold.co/100x100/D2B48C/FFFFFF?text=🥳" alt="Reward Icon" class="w-24 h-24 animate-bounce">
                        <span class="mt-4 text-2xl font-extrabold text-yellow-600 uppercase">¡PREMIO OBTENIDO!</span>
                    </div>
                    <p class="text-sm italic text-gray-500">¡Habla con tu hijo/a para reclamar tu recompensa!</p>
                </div>
            `;
            levelTitleEl.textContent = "¡Aventura Terminada!";
            quizProgressEl.textContent = "100 de 100";
            progressBarEl.style.width = "100%";
        }
        
        // Activar audio y renderizar la página al cargar
        document.body.addEventListener('click', function() {
            const audio = document.getElementById('background-audio');
            if (audio.muted) {
                audio.muted = false;
                audio.play();
            }
        }, { once: true });
        
        window.onload = () => {
            // Establecer el nivel actual en 99 para ir directamente al nivel 100.
            currentLevel = 99;
            renderContent();
        };
    </script>
</body>
</html>
